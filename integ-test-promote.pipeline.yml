resources:
  pipelines:
    - pipeline: integ_test_promote
      source: pre-integ-test
      trigger: true

trigger: none
pr: none

stages:
  - stage: integration_test
    displayName: Integration test
    jobs:
      - job: test_install
        pool:
          vmImage: ubuntu-16.04
        steps:
          - checkout: none
          - task: MathWorks.matlab-azure-pipelines-extension-dev.InstallMATLAB.InstallMATLAB@0
            displayName: Install MATLAB
          - script: |
              set -e
              matlab -batch version
              mex -h
            displayName: Check matlab and mex

      - job: test_run_command
        pool:
          vmImage: ubuntu-16.04
        steps:
          - checkout: none
          - task: MathWorks.matlab-azure-pipelines-extension-dev.InstallMATLAB.InstallMATLAB@0
            displayName: Install MATLAB
          - task: MathWorks.matlab-azure-pipelines-extension-dev.RunMATLABCommand.RunMATLABCommand@0
            displayName: Run MATLAB statement
            inputs:
              command: f = fopen('myscript.m', 'w'); fwrite(f, 'assert(true)'); fclose(f);
          - task: MathWorks.matlab-azure-pipelines-extension-dev.RunMATLABCommand.RunMATLABCommand@0
            displayName: Run MATLAB script
            inputs:
              command: myscript
          - task: MathWorks.matlab-azure-pipelines-extension-dev.RunMATLABCommand.RunMATLABCommand@0
            displayName: Run MATLAB statement with quotes 1
            inputs:
              command: "eval(\"a = 1+2\"); assert(a == 3); eval('b = 3+4'); assert(b == 7);"
          - task: MathWorks.matlab-azure-pipelines-extension-dev.RunMATLABCommand.RunMATLABCommand@0
            displayName: Run MATLAB statement with quotes 2
            inputs:
              command: 'eval("a = 1+2"); assert(a == 3); eval(''b = 3+4''); assert(b == 7);'
          - task: MathWorks.matlab-azure-pipelines-extension-dev.RunMATLABCommand.RunMATLABCommand@0
            displayName: Run MATLAB statement with quotes 3
            inputs:
              command: a = """hello world"""; b = '"hello world"'; assert(strcmp(a,b));
          # https://github.com/mathworks/matlab-azure-pipelines-extension/issues/11
          - task: MathWorks.matlab-azure-pipelines-extension-dev.RunMATLABCommand.RunMATLABCommand@0
            displayName: Run MATLAB statement with quotes 4
            inputs:
              command: disp(" 'ABC`abc")

      - job: test_run_tests
        pool:
          vmImage: ubuntu-16.04
        steps:
          - checkout: none
          - task: MathWorks.matlab-azure-pipelines-extension-dev.InstallMATLAB.InstallMATLAB@0
            displayName: Install MATLAB
          - script: |
              mkdir src
              echo 'function c=add(a,b);c=a+b;' > src/add.m
              mkdir tests
              printf "%%%% FirstTest\nassert(add(1,2)==3)" > tests/mytest.m
            displayName: Make MATLAB tests
          - task: MathWorks.matlab-azure-pipelines-extension-dev.RunMATLABTests.RunMATLABTests@0
            displayName: Run MATLAB tests with defaults
            inputs:
              sourceFolder: src
          - task: MathWorks.matlab-azure-pipelines-extension-dev.RunMATLABTests.RunMATLABTests@0
            displayName: Run MATLAB tests producing artifacts
            inputs:
              testResultsJUnit: test-results/matlab/results.xml
              codeCoverageCobertura: code-coverage/coverage.xml
              sourceFolder: src
          - script: |
              set -e
              grep -q FirstTest test-results/matlab/results.xml
            displayName: Verify test results file was created
          - script: |
              set -e
              grep -q add code-coverage/coverage.xml
            displayName: Verify code coverage file was created

  - stage: publish_prerelease
    displayName: Publish prerelease
    condition: always()
    pool:
      vmImage: ubuntu-16.04
    jobs:
      - deployment: publish_prerelease
        environment: prerelease
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: DownloadPipelineArtifact@2
                  displayName: Get stored extension
                  inputs:
                    source: specific
                    project: b3d35465-d584-454b-a4e9-e60757510c12
                    pipeline: 1
                    runVersion: latest
                    artifact: extension
                    path: $(Build.StagingDirectory)

                - task: TfxInstaller@2
                  displayName: Install tfx-cli
                  inputs:
                    version: v0.7.x

                - task: PublishAzureDevOpsExtension@2
                  displayName: Publish prerelease
                  inputs:
                    connectTo: VsTeam
                    connectedServiceName: MathWorks
                    fileType: vsix
                    extensionTag: -prerelease
                    extensionVisibility: private
                    vsixFile: $(Build.StagingDirectory)/*.vsix
                    updateTasksVersion: false

  - stage: publish_release
    displayName: Publish release
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: ubuntu-16.04
    jobs:
      - deployment: publish_release
        environment: release
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: DownloadPipelineArtifact@2
                  displayName: Get stored extension
                  inputs:
                    source: specific
                    project: b3d35465-d584-454b-a4e9-e60757510c12
                    pipeline: 1
                    runVersion: latest
                    artifact: extension
                    path: $(Build.StagingDirectory)

                - task: TfxInstaller@2
                  displayName: Install tfx-cli
                  inputs:
                    version: v0.7.x

                - task: PublishAzureDevOpsExtension@2
                  displayName: Publish release
                  inputs:
                    connectTo: VsTeam
                    connectedServiceName: MathWorks
                    fileType: vsix
                    vsixFile: $(Build.StagingDirectory)/*.vsix
                    updateTasksVersion: false
